openapi: 3.0.3
info:
  title: TensorProject
  description: contract for TensorProject
  version: 1.0.1
servers:
  - url: "http://127.0.0.1:8888"
paths:
  /register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Некорректные данные
  /login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Неверные учетные данные
  /refresh-token:
    post:
      summary: Обновление JWT токена
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Успешное обновление токена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        '400':
          description: Некорректные данные или недействительный рефреш токен
  /secure-endpoint:
    get:
      summary: Пример защищенного эндпоинта
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Доступ разрешен
        '401':
          description: Токен не предоставлен или недействителен
  /travels:
    post:
      summary: Create a new travel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Travel_Post"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Travel_Post_200"
        "400":
          description: Invalid request data
    get:
      summary: Get all travels
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Travel_Get_200"
        "500":
          description: Internal server error

  /profile/settings/{id}:
    get:
      summary: Получение настроек профиля
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID профиля
      responses:
        '200':
          description: Успешное получение настроек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSettings'
        '404':
          description: Профиль не найден

    put:
      summary: Обновление настроек профиля
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID профиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSettings'
      responses:
        '200':
          description: Успешное обновление настроек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSettings'
        '400':
          description: Некорректные данные

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
      required:
        - username
        - password
        - email
    RegisterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
    Travel_Post:
      type: object
      properties:
        name:
          type: string
          description: Travel name
        description:
          type: string
          description: Travel description
        places:
          type: array
          items:
            $ref: "#/components/schemas/Place"
    Travel_Post_200:
      type: object
      properties:
        message:
          type: string
          description: Success!
    Travel_Get_200:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Travel_Item_Get_200"
    Travel_Item_Get_200:
      type: object
      properties:
        id:
          type: integer
          description: Travel ID
        name:
          type: string
          description: Travel name
        description:
          type: string
          description: Travel description
        places:
          type: array
          items:
            $ref: "#/components/schemas/Place"
    Place:
      type: object
      properties:
        id:
          type: integer
          description: Place ID
        address:
          type: string
          description: Place address
        name:
          type: string
          description: Place name
        type:
          type: string
          description: Place type
    ProfileSettings:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        gender:
          type: string
        birthDate:
          type: string
          format: date
        email:
          type: string
          format: email
        username:
          type: string
        city:
          type: string
        interests:
          type: array
          items:
            type: string

